# ********************************************************************************
# * Project: Eskapade - A python-based package for data analysis                 *
# * Created: 2017/08/08                                                          *
# * Description:                                                                 *
# *     Statistics functionality for data-quality                                *
# *                                                                              *
# * Authors:                                                                     *
# *      KPMG Big Data team, Amstelveen, The Netherlands                         *
# *                                                                              *
# * Redistribution and use in source and binary forms, with or without           *
# * modification, are permitted according to the terms listed in the file        *
# * LICENSE.                                                                     *
# ********************************************************************************

import logging

from setuptools import setup
from setuptools import find_packages

NAME = 'Eskapade'

MAJOR = 0
REVISION = 6
PATCH = 0
DEV = True

VERSION = '{major}.{revision}.{patch}'.format(major=MAJOR, revision=REVISION, patch=PATCH)
FULL_VERSION = VERSION
if DEV:
    FULL_VERSION += '.dev'

CMDCLASS = dict()
COMMAND_OPTIONS = dict()

logging.basicConfig()
logger = logging.getLogger(__file__)


def write_version_py(filename='python/eskapade/version.py'):
    version_str = """
# THIS IS FILE IS AUTO-GENERATED BY ESKAPADE SETUP.PY
    
version = '{version!s}'
full_version = '{full_version!s}'
release = {is_release!s}
"""

    version_file = open(filename, 'w')
    try:
        version_file.write(version_str.format(version=VERSION,
                                              full_version=FULL_VERSION,
                                              is_release=not DEV))
    finally:
        version_file.close()


def exclude_packages():
    # We don't install tests by default.
    exclude = ['*tests*']

    try:
        import ROOT
        import RooFit
        import RooStats
    except ImportError:
        logger.fatal('PyROOT and RooFit are missing! Not going to install ROOT analysis modules!')
        # This does not really work. Tests are excluded though.
        exclude.append('*root_analysis*')

    return exclude


# This is for auto-generating documentation.
HAVE_SPHINX = True
try:
    from sphinx.setup_command import BuildDoc

    CMDCLASS['build_sphinx'] = BuildDoc
    COMMAND_OPTIONS['build_sphinx'] = {
        'project': ('setup.py', NAME),
        'version': ('setup.py', VERSION),
        'release': ('setup.py', FULL_VERSION)
    }
except ImportError:
    HAVE_SPHINX = False


def setup_package():
    write_version_py()

    setup(name=NAME,
          version=VERSION,
          url='http://eskapade.kave.io',
          license='',
          author='KPMG',
          description='Eskapade modular analytics',
          python_requires='>=3.5',
          package_dir={NAME.lower(): 'python/' + NAME.lower()},
          packages=find_packages(where='python', exclude=exclude_packages()),
          include_package_data=True,
          package_data={
              NAME.lower(): ['templates/*']
          },
          install_requires=[
              'numba>=0.34.0',
              'jupyter>=1.0.0',
              'matplotlib>=2.0.2',
              'numpy>=1.13.1',
              'scipy>=0.19.1',
              'statsmodels>=0.8.0',
              'pandas>=0.20.3',
              'tabulate>=0.7.7',
              'sortedcontainers>=1.5.7',
              'histogrammar>=1.0.8',
              'names>=0.3.0',
              'fastnumbers>=2.0.1',
              'python-Levenshtein>=0.12.0'
          ],
          cmdclass=CMDCLASS,
          command_options=COMMAND_OPTIONS,
          # The following 'creates' executable scripts for *nix and Windows.
          # As an added the bonus the Windows scripts will auto-magically
          # get a .exe extension.
          entry_points={
              'console_scripts': [
                  'eskapade = eskapade._eskapade:eskapade'
              ]
          }
          )


if __name__ == '__main__':
    setup_package()
