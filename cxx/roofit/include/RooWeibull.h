/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef ROOWEIBULL
#define ROOWEIBULL

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include "RooRealConstant.h"
 
class RooWeibull : public RooAbsPdf {
public:
  RooWeibull() {} ; 
  RooWeibull(const char *name, const char *title,
	      RooAbsReal& _x,
	      RooAbsReal& _alpha,
	      RooAbsReal& _beta,
	      RooAbsReal& _gamma = RooRealConstant::value(0));
  RooWeibull(const RooWeibull& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooWeibull(*this,newname); }
  inline virtual ~RooWeibull() { }

  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;

protected:

  RooRealProxy x ;
  RooRealProxy alpha ;
  RooRealProxy beta ;
  RooRealProxy gamma ;
  
  Double_t evaluate() const ;

private:

  ClassDef(RooWeibull,1) // Your description goes here...
};
 
#endif

